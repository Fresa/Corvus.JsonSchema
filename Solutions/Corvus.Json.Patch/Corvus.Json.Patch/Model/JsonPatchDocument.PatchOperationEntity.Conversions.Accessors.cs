//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Corvus.Json;

namespace Corvus.Json.Patch.Model;
public readonly partial struct JsonPatchDocument
{
    /// <summary>
    /// A type generated from a JsonSchema specification.
    /// </summary>
    public readonly partial struct PatchOperationEntity
    {
        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity AsPatchOperationCommonEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity"/>.
        /// </summary>
        public bool IsPatchOperationCommonEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsPatchOperationCommonEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.PatchOperationCommonEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity AsAddEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity"/>.
        /// </summary>
        public bool IsAddEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsAddEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.AddEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity AsRemoveEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity"/>.
        /// </summary>
        public bool IsRemoveEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsRemoveEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.RemoveEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity AsReplaceEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity"/>.
        /// </summary>
        public bool IsReplaceEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsReplaceEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.ReplaceEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity AsMoveEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity"/>.
        /// </summary>
        public bool IsMoveEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsMoveEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.MoveEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity AsCopyEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity"/>.
        /// </summary>
        public bool IsCopyEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsCopyEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.CopyEntity)this;
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity"/>.
        /// </summary>
        public Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity AsTestEntity
        {
            get
            {
                return (Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity)this;
            }
        }

        /// <summary>
        /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity"/>.
        /// </summary>
        public bool IsTestEntity
        {
            get
            {
                return ((Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity)this).IsValid();
            }
        }

        /// <summary>
        /// Gets the value as a <see cref = "Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity"/>.
        /// </summary>
        /// <param name = "result">The result of the conversion.</param>
        /// <returns><c>True</c> if the conversion was valid.</returns>
        public bool TryGetAsTestEntity(out Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity result)
        {
            result = (Corvus.Json.Patch.Model.JsonPatchDocument.TestEntity)this;
            return result.IsValid();
        }
    }
}